Using ``matrix_divided``
-----------------------

Importing the function

::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

For normal matrix

::

	>>> matrix = [[1, 2, 3],[4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

::

	>>> matrix = [[2, 4, 6], [8, 10, 12]]
	>>> matrix_divided(matrix, 2)
	[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

::

	>>> matrix_divided([[4, 2, 2]], 2)
	[[2.0, 1.0, 1.0]]

Division by Infinity
-------------------

::

	>>> matrix_divided(matrix, float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Argument Not Provided
--------------------

::

	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

::

	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Division by 0 and div must be a number
-------------

::

	>>> matrix_divided(matrix, "str")
	Traceback (most recent call last):
	TypeError: div must be a number

::

	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

Inconsistent row size and value apart from number
------------------------------------------------

::

	>>> matrix_divided([[1, 2, 3], [4, "3", 6]], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

	>>> matrix = [[7, 8, 4], [9, 5, 7, 2, 10]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size
